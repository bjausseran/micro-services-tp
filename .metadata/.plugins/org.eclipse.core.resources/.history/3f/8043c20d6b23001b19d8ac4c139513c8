package com.fight.club.arena;

import java.time.LocalDate;
import java.util.Optional;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.fight.club.arena.Arena;
import com.fight.club.arena.ArenaRepository;

public class ArenaController {
	private final ArenaRepository arenas;

	public ArenaController(ArenaRepository arenas) {
		this.arenas = arenas;
	}

	@GetMapping("/arenas")
	public Iterable<Arena> getFights() {
		return arenas.findAll();
	}

	@GetMapping("/arenas/{id}")
	public Optional<Arena> getFightById(@PathVariable("id") Integer id) {
		return arenas.findById(id);
	}

	@PostMapping("/arenas")
	public Arena addFight(
			@RequestParam("date") LocalDate date, 
			@RequestParam("description") String description,
			@RequestParam("fighterAId") Integer fighterAId, 
			@RequestParam("fighterBId") Integer fighterBId) 
	{
		Arena fight = new Arena();
		fight.setDate(date);
		fight.setDescription(description);
		fight.setFighterAId(fighterAId);
		return arenas.save(fight);
	}

	@DeleteMapping("/arenas/{id}")
	public void deleteFight(@PathVariable("id") Integer id) {
		arenas.deleteById(id);
	}
	
	@GetMapping("/arenas/findByFighterId/{petId}")
	public Iterable<Arena> findByFighterId(@PathVariable("fighterId") Integer fighterId) {
		return arenas.findByFighterId(fighterId);
	}

}
